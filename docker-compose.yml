version: '3.9'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9192:9192"
    expose:
      - 9193
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9192,PLAINTEXT_INTERNAL://kafka:9193
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server=localhost:9192 --version
      interval: 10s
      timeout: 10s
      retries: 10


  app:
    image: task-app
    ports:
      - 8081:8081
    environment:
      - DOCKER_COMPOSE=true
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "localhost:8081" ]
      start_period: 5s
      timeout: 5s
      retries: 3

  worker1:
    image: worker
    environment:
      - DOCKER_COMPOSE=true
      - SEQUENCE_PATH=static/data1.txt
    volumes:
      - ./worker/static:/static
    depends_on:
      kafka:
        condition: service_healthy
      app:
        condition: service_healthy

  worker2:
    image: worker
    environment:
      - DOCKER_COMPOSE=true
      - SEQUENCE_PATH=static/data2.txt
    volumes:
      - ./worker/static:/static
    depends_on:
      kafka:
        condition: service_healthy
      app:
        condition: service_healthy

  worker3:
    image: worker
    environment:
      - DOCKER_COMPOSE=true
      - SEQUENCE_PATH=static/data3.txt
    volumes:
      - ./worker/static:/static
    depends_on:
      kafka:
        condition: service_healthy
      app:
        condition: service_healthy

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local