// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ProduceMessageOKCode is the HTTP code returned for type ProduceMessageOK
const ProduceMessageOKCode int = 200

/*
ProduceMessageOK Ok producing message

swagger:response produceMessageOK
*/
type ProduceMessageOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewProduceMessageOK creates ProduceMessageOK with default headers values
func NewProduceMessageOK() *ProduceMessageOK {

	return &ProduceMessageOK{}
}

// WithPayload adds the payload to the produce message o k response
func (o *ProduceMessageOK) WithPayload(payload string) *ProduceMessageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the produce message o k response
func (o *ProduceMessageOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProduceMessageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ProduceMessageBadRequestCode is the HTTP code returned for type ProduceMessageBadRequest
const ProduceMessageBadRequestCode int = 400

/*
ProduceMessageBadRequest Error producing message

swagger:response produceMessageBadRequest
*/
type ProduceMessageBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewProduceMessageBadRequest creates ProduceMessageBadRequest with default headers values
func NewProduceMessageBadRequest() *ProduceMessageBadRequest {

	return &ProduceMessageBadRequest{}
}

// WithPayload adds the payload to the produce message bad request response
func (o *ProduceMessageBadRequest) WithPayload(payload string) *ProduceMessageBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the produce message bad request response
func (o *ProduceMessageBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProduceMessageBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ProduceMessageInternalServerErrorCode is the HTTP code returned for type ProduceMessageInternalServerError
const ProduceMessageInternalServerErrorCode int = 500

/*
ProduceMessageInternalServerError Internal server error

swagger:response produceMessageInternalServerError
*/
type ProduceMessageInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewProduceMessageInternalServerError creates ProduceMessageInternalServerError with default headers values
func NewProduceMessageInternalServerError() *ProduceMessageInternalServerError {

	return &ProduceMessageInternalServerError{}
}

// WithPayload adds the payload to the produce message internal server error response
func (o *ProduceMessageInternalServerError) WithPayload(payload string) *ProduceMessageInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the produce message internal server error response
func (o *ProduceMessageInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProduceMessageInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
