// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetResultsOKCode is the HTTP code returned for type GetResultsOK
const GetResultsOKCode int = 200

/*
GetResultsOK Ok receiving messages

swagger:response getResultsOK
*/
type GetResultsOK struct {

	/*
	  In: Body
	*/
	Payload []*GetResultsOKBodyItems0 `json:"body,omitempty"`
}

// NewGetResultsOK creates GetResultsOK with default headers values
func NewGetResultsOK() *GetResultsOK {

	return &GetResultsOK{}
}

// WithPayload adds the payload to the get results o k response
func (o *GetResultsOK) WithPayload(payload []*GetResultsOKBodyItems0) *GetResultsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get results o k response
func (o *GetResultsOK) SetPayload(payload []*GetResultsOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResultsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*GetResultsOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetResultsInternalServerErrorCode is the HTTP code returned for type GetResultsInternalServerError
const GetResultsInternalServerErrorCode int = 500

/*
GetResultsInternalServerError Internal server error

swagger:response getResultsInternalServerError
*/
type GetResultsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetResultsInternalServerError creates GetResultsInternalServerError with default headers values
func NewGetResultsInternalServerError() *GetResultsInternalServerError {

	return &GetResultsInternalServerError{}
}

// WithPayload adds the payload to the get results internal server error response
func (o *GetResultsInternalServerError) WithPayload(payload string) *GetResultsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get results internal server error response
func (o *GetResultsInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResultsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
